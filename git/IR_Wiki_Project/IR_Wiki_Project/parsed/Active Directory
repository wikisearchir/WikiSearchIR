titleActive Directory (AD) is a directory service created by Microsoft for Windows domain networks. It is included in most Windows Server operating systems. Server computers on which Active Directory is running are called domain controllers.Active Directory serves as a central location for network administration and security. It is responsible for authenticating and authorizing all users and computers within a network of Windows domain type, assigning and enforcing security policies for all computers in a network and installing or updating software on network computers. For example, when a user logs into a computer that is part of a Windows domain, it is Active Directory that verifies his or her password and specifies whether he or she is a system administrator or normal user.{{cite web}}Active Directory uses Lightweight Directory Access Protocol (LDAP) versions 2 and 3, Kerberos and  DNS.
HistoryActive Directory was previewed in 1999, released first with Windows 2000 Server edition, and revised to extend functionality and improve administration in Windows Server 2003. Additional improvements were made in Windows Server 2003 R2, Windows Server 2008 and Windows Server 2008 R2, and with the release of the latter the domain controller role was renamed Active Directory Domain Services.
Structure
ObjectsAn Active Directory structure is a hierarchical arrangement of information about objects. The objects fall into two broad categories: resources (e.g., printers) and security principals (user or computer accounts and groups). Security principals are assigned unique security identifiers (SIDs).Each object represents a single entity&mdash;whether a user, a computer, a printer, or a group&mdash;and its attributes. Certain objects can contain other objects. An object is uniquely identified by its name and has a set of attributes&mdash;the characteristics and information that the object represents&mdash; defined by a schema, which also determines the kinds of objects that can be stored in Active Directory.Each attribute object can be used to define multiple schema objects. The schema object allows the schema to be extended or modified when necessary. However, because each schema object is integral to the definition of Active Directory objects, deactivating or changing these objects can fundamentally change and/or disrupt a deployment. Schema changes automatically propagate throughout the system. Once created, an object can only be deactivated&mdash;not deleted. Changing the schema usually requires planning.{{Cite book}}
SitesA Site object in Active Directory represents a geographic location that hosts networks.{{cite web}}
Forests, trees, and domainsThe Active Directory framework that holds the objects can be viewed at a number of levels. The forest, tree, and domain are the logical divisions in an Active Directory network.Within a deployment, objects are grouped into domains. The objects for a single domain are stored in a single database (which can be replicated). Domains are identified by their DNS name structure, the namespace.A tree is a collection of one or more domains and domain trees in a contiguous namespace, linked in a transitive trust hierarchy.At the top of the structure is the forest. A forest is a collection of trees that share a common global catalog, directory schema, logical structure, and directory configuration. The forest represents the security boundary within which users, computers, groups, and other objects are accessible.



  Forest-Widgets Corp 
     Tree-Eastern 
        Domain-Boston 
        Domain-New York 
        Domain-Philly 
     Tree-Southern 
        Domain-Atlanta 
        Domain-Dallas  

 Domain-Dallas 
     OU-Marketing 
        Hewitt 
        Aon 
        Steve 
     OU-Sales 
        Bill 
        Ralph  
Example of the geographical organizing of zones of interest within trees and domains. 

Organizational unitsThe objects held within a domain can be grouped into Organizational Units (OUs).{{cite web}} OUs can provide hierarchy to a domain, ease its administration, and can resemble the organization's structure in managerial or geographical terms. OUs can contain other OUs&mdash;domains are containers in this sense. Microsoft recommends using OUs rather than domains for structure and to simplify the implementation of policies and administration. The OU is the recommended level at which to apply group policies, which are Active Directory objects formally named Group Policy Objects (GPOs), although policies can also be applied to domains or sites (see below). The OU is the level at which administrative powers are commonly delegated, but delegation can be performed on individual objects or attributes as well.Organizational Units are an abstraction for the administrator and do not function as containers; the underlying domain is the true container. It is not possible, for example, to create user accounts with an identical username (sAMAccountName) in separate OUs, such as "fred.staff-ou.domain" and "fred.student-ou.domain", where "staff-ou" and "student-ou" are the OUs. This is so because sAMAccountName, a user object attribute, must be unique within the domain.As the number of users in a domain increases, conventions such as "first initial, middle initial, last name" (Western order) or the reverse (Eastern order) will fail for common family names like Li (?), Smith or Garcia. Workarounds include adding a digit to the end of the username. Alternatives include creating a separate ID system of unique employee/student id numbers to use as account names in place of actual user's names, and allowing users to nominate their preferred word sequence within an acceptable use policy.Because duplicate usernames cannot exist within a domain, account name generation poses a significant challenge for large organizations that cannot be easily subdivided into separate domains, such as students in a public school system or university who must be able to use any computer across the network.
Shadow groups
In Microsoft's Active Directory, OUs do not confer access permissions, and objects placed within OUs are not automatically assigned access privileges based on their containing OU. This is a design limitation specific to Active Directory. Other competing directories such as Novell NDS are able to assign access privileges through object placement within an OU.In Active Directory it is a separate step for an administrator to assign an object in an OU to be a member of a group that is also within that OU. Relying on OU location alone to determine access permissions is unreliable because the object may not have been assigned to the group object for that OU.A common workaround for an Active Directory administrator is to write a custom PowerShell or Visual Basic script to automatically create and maintain a user group for each OU in their directory. The scripts are run periodically to update the group to match the OU's account membership, but are unable to instantly update the security groups anytime the directory changes, as occurs in competing directories where security is directly implemented into the directory itself. Such groups are known as Shadow Groups. Once created, these shadow groups are selectable in place of the OU in the administrative tools.Microsoft refers to shadow groups in the Server 2008 Reference documentation, but does not explain how to create them. There are no built-in server methods or console snap-ins for managing shadow groups.Microsoft Server 2008 Reference, discussing shadow groups used for fine-grained password policies: http://technet.microsoft.com/en-us/library/cc770394%28WS.10%29.aspx The division of an organization's information infrastructure into a hierarchy of one or more domains and top-level OUs is a key decision. Common models are by business unit, by geographical location, by IT Service, or by object type and hybrids of these. OUs should be structured primarily to facilitate administrative delegation, and secondarily, to facilitate group policy application. Although OUs form an administrative boundary, the only true security boundary is the forest itself and an administrator of any domain in the forest must be trusted across all domains in the forest.{{cite web}}
Physical mattersSites are physical (rather than logical) groupings defined by one or more IP subnets.{{cite web}} AD also holds the definitions of connections, distinguishing low-speed (e.g., WAN, VPN) from high-speed (e.g., LAN) links. Site definitions are independent of the domain and OU structure and are common across the forest. Sites are used to control network traffic generated by replication and also to refer clients to the nearest domain controllers. Microsoft Exchange Server 2007 uses the site topology for mail routing. Policies can also be defined at the site level.Physically the Active Directory information is held on one or more peer domain controllers (DCs), replacing the NT PDC/BDC model. Each DC has a copy of the Active Directory. Servers joined to Active Directory that are not domain controllers are called Member Servers.{{cite web}}The Active Directory database is organized in partitions, each holding specific object types and following a specific replication pattern. AD synchronizes changes using multi-master replication.{{cite web}} Microsoft often refers to these partitions as 'naming contexts'.{{cite web}} The 'Schema' partition contains the definition of object classes and attributes within the Forest. The 'Configuration' partition contains information on the physical structure and configuration of the forest (such as the site topology). Both replicate to all domain controllers in the Forest.  The 'Domain' partition holds all objects created in that domain and replicates only to Domain Controllers within its domain. So, for example, a user created in Domain X would be listed only in Domain X's domain controllers.
A subset of objects in the domain partition replicate to domain controllers that are configured as global catalogs. Global catalog (GC) servers provide a global listing of all objects in the Forest.{{cite web}} Global Catalog servers replicate to themselves all objects from all domains and hence, provide a global listing of objects in the forest. However, in order to minimize replication traffic and to keep the GC's database small, only selected attributes of each object are replicated. This is called the partial attribute set (PAS). The PAS can be modified by modifying the schema and marking attributes for replication to the GC.{{cite web}}
Earlier versions of Windows used NetBIOS to communicate. Active Directory is fully integrated with DNS and requires TCP/IPDNS. To be fully functional, the DNS server must support SRV resource records or service records.
ReplicationActive Directory replication is 'pull' rather than 'push', meaning that replicas pull changes from the server where the change was effected.{{cite web}} The Knowledge Consistency Checker (KCC) creates a replication topology of site links using the defined sites to manage traffic. Intrasite replication is frequent and automatic as a result of change notification, which triggers peers to begin a pull replication cycle. Intersite replication intervals are typically less frequent and do not use change notification by default, although this is configurable and can be made identical to intrasite replication.Each link can have a 'cost' (e.g., DS3, T1, ISDN etc.) and the site link topology will be altered accordingly by the KCC. Replication may occur transitively through several site links on same-protocol site link bridges, if the cost is low, although KCC automatically costs a direct site-to-site link lower than transitive connections. Site-to-site replication can be configured to occur between a bridgehead server in each site, which then replicates the changes to other DCs within the site.Replication of Active Directory uses Remote Procedure Calls (RPC) over IP (RPC/IP). Between Sites SMTP can be used for replication, but only for changes in the Schema, Configuration, or Partial Attribute Set (Global Catalog) NCs. SMTP cannot be used for replicating the default Domain partition.{{cite web}}
DatabaseThe Active Directory database, the directory store, in Windows 2000 Server uses the JET Blue-based Extensible Storage Engine (ESE98) and is limited to 16 terabytes and 2 billion objects (but only 1 billion security principals) in each domain controller's database. Microsoft has created NTDS databases with more than 2 billion objects.{{cite web}} (NT4's Security Account Manager could support no more than 40,000 objects). Called NTDS.DIT, it has two main tables: the data table and the link table.  In Windows Server 2003 a third main table was added for security descriptor single instancing.
Programmatic interfaceThe features of Active Directory may be accessed programmatically via the COM interfaces provided by Active Directory Service Interfaces.Active Directory Service Interfaces, Microsoft
Single server operationsFlexible Single Master Operations (FSMO, sometimes pronounced "fizz-mo") operations are also known as operations master roles. Although domain controllers allow simultaneous updates in multiple places, certain operations are supported only on a single server. These operations are performed using the roles listed below:

Role Name Scope Description 
Schema Master 1 per forest Schema modifications 
Domain Naming Master 1 per forest Addition and removal of domains if present in root domain 
PDC Emulator 1 per domain Provides backwards compatibility for NT4 clients for PDC operations (like password changes).  The PDC runs domain specific processes such as the Security Descriptor Propagator (SDPROP), and is the master time server within the domain. It also handles external trusts, the DFS consistency check, holds current passwords and manages all GPOs as default server. 
RID Master 1 per domain Allocates pools of unique identifiers to domain controllers for use when creating objects 
Infrastructure Master 1 per domain/partition Synchronizes cross-domain group membership changes.  The infrastructure master cannot run on a global catalog server (GCS) (unless all DCs are also GCs, or environment consists of a single domain). 

TrustTo allow users in one domain to access resources in another, Active Directory uses trusts.{{cite web}}Trusts inside a forest are automatically created when domains are created. The forest sets the default boundaries of trust, and implicit, transitive trust is automatic for all domains within a forest.
Terminology

One-way trust
One domain allows access to users on another domain, but the other domain does not allow access to users on the first domain.
Two-way trust
Two domains allow access to users on both domains.
Trusting domain
The domain that allows access to users from a trusted domain.
Trusted domain
The domain that is trusted; whose users have access to the trusting domain.
Transitive trust
A trust that can extend beyond two domains to other trusted domains in the forest.
Intransitive trust
A one way trust that does not extend beyond two domains.
Explicit trust
A trust that an admin creates. It is not transitive and is one way only.
Cross-link trust
An explicit trust between domains in different trees or in the same tree when a descendant/ancestor (child/parent) relationship does not exist between the two domains.
Shortcut
Joins two domains in different trees, transitive, one- or two-way
Forest
Applies to the entire forest. Transitive, one- or two-way
Realm
Can be transitive or nontransitive, one- or two-way
External
Connect to other forests or non-AD domains. Nontransitive, one- or two-way.{{cite web}}


Windows Server 2003 introduced the forest root trust. This trust can be used to connect Windows Server 2003 forests if they are operating at the 2003 forest functional level. Authentication across this type of trust is Kerberos based (as opposed to NTLM). Forest trusts are transitive for all the domains in the trusted forests. Forest trusts, however, are not transitive.{{clarify}}
Lightweight Directory Service {{anchor}}Active Directory Lightweight Directory Service (AD LDS), formerly known as Active Directory Application Mode (ADAM),{{cite web}} is a light-weight implementation of Active Directory. AD LDS is capable of running as a service on computers running Microsoft Windows Server. AD LDS shares the code base with Active Directory and provides the same functionality as Active Directory, including an identical API, but does not require the creation of domains or domain controllers.Like Active Directory, AD LDS provides a Data Store for storage of directory data and a Directory Service with an LDAP Directory Service Interface. Unlike Active Directory, however, multiple AD LDS instances can be run on the same server.
Unix integrationVarying levels of interoperability with Active Directory can be achieved on most Unix-like operating systems through standards-compliant LDAP clients, but these systems usually do not interpret  many attributes associated with Windows components, such as Group Policy and support for one-way trusts.Third-parties offer Active Directory integration for Unix platforms (including UNIX, Linux, Mac OS X, and a number of Java- and UNIX-based applications), including:

Centrify DirectControl (Centrify Corporation)  Active Directory-compatible centralized authentication and access control
Centrify Express (Centrify Corporation)  A suite of free Active Directory-compliant services for centralized authentication, monitoring, file-sharing and remote access
UNAB (Computer Associates)
TrustBroker (CyberSafe Limited)  An implementation of Kerberos
PowerBroker Identity Services, formerly Likewise (BeyondTrust, formerly Likewise Software)  Allows a non-Windows client to join Active Directory{{cite book}} 
Authentication Services (Quest Software)
ADmitMac (Thursby Software Systems)
Samba  Can act as a domain controller{{cite web}}{{cite web}}

The schema additions shipped with Windows Server 2003 R2 include attributes that map closely enough to RFC 2307 to be generally usable. The reference implementation of RFC 2307, nss_ldap and pam_ldap provided by PADL.com, support these attributes directly. The default schema for group membership complies with RFC 2307bis (proposed).{{cite web}} Windows Server 2003 R2 includes a Microsoft Management Console snap-in that creates and edits the attributes.An alternate option is to use another directory service such as 389 Directory Server (formerly Fedora Directory Server, FDS), eB2Bcom ViewDS v7.1 XML Enabled Directory  or Sun Microsystems Sun Java System Directory Server, which can perform two-way synchronization with AD and thus provide a "deflected" integration, as Unix and Linux clients authenticate to FDS and Windows Clients authenticate to AD. Another option is to use OpenLDAP with its translucent overlay, which can extend entries in any remote LDAP server with additional attributes stored in a local database. Clients pointed at the local database see entries containing both the remote and local attributes, while the remote database remains completely untouched.{{Citation needed}}Active Directory can be automated by Powershell.{{cite web}}
See also

Active Directory Explorer
AGDLP (implementing role based access controls using nested groups)
Directory Services Restore Mode
Flexible single master operation
FreeIPA
List of LDAP software


References
{{Reflist}}
External links

Microsoft's Active Directory Page
Microsoft Technet: White paper: Active Directory Architecture (Single technical document that gives an overview about Active Directory.)
Microsoft Technet: Detailed description of Active Directory on Windows Server 2003
Microsoft MSDN Library: [MS-ADTS: Active Directory Technical Specification] (part of the Microsoft Open Specification Promise)
Active Directory Application Mode (ADAM)
Powershell scripts to search Active Directory

{{Microsoft products}}
{{Windows Components}}
{{Use dmy dates}}



ar:?????? ?????
cs:Active Directory
da:Active Directory
de:Active Directory
es:Active Directory
eu:Direktorio aktibo
fa:????? ?????????
fr:Active Directory
ko:??? ????
hi:?????? ??????????
id:Direktori Aktif
it:Active Directory
he:Active Directory
lv:Active Directory
hu:Active Directory
ml:????????? ??????????
nl:Active Directory
ja:Active Directory
no:Active Directory
nn:Active Directory
pl:Active Directory
pt:Active Directory
ro:Active Directory
ru:Active Directory
sk:Active Directory
fi:Active Directory
sv:Active Directory
ta:????????? ????????
tr:Active Directory
uk:Active Directory
yi:Active Directory
zh:Active Directory